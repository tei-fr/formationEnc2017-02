<?xml version="1.0" encoding="UTF-8"?><TEI xmlns="http://www.tei-c.org/ns/1.0">
  <teiHeader>
    <fileDesc>
      <titleStmt>
        <!--How the TEI uses ODD-->
        <title xml:lang="fr" rend="slide">Comment la TEI utilise ODD</title>
        <author xml:id="LB">Lou Burnard Consulting</author>
      </titleStmt>
      <publicationStmt>
        <!--for presentation at TEI MM 2014 -->
        <p xml:lang="fr" rend="slide">Préparé pour ENC MasterPro 2015</p>
      </publicationStmt>
      <sourceDesc>
        <p>Translated from ODD MuteC 2014 which was majoritairement nouveau!</p>
      </sourceDesc>
    </fileDesc>
    <revisionDesc>
      <change who="#LB" when="2017-02-06">Updated</change>
      <change who="#LB" when="2015-02-26">Added Fr versions back</change>
      <change who="#LB" when="2014-10-11">Add english trans</change>
      <change who="#LB" when="2014-02-21">1er jet</change>
    </revisionDesc>
  </teiHeader>
  <text>
    <front>
      <titlePage xml:lang="fr">
        <titlePart>07-Comment la TEI utilise ODD</titlePart>
        <docImprint>Formation TEI | ENC 27 fév - 2 mars 2017</docImprint>
        <note><ref target="https://github.com/tei-fr/formationEnc2017-02">Répertoire
          GitHub</ref> | <ref target="00-programme.html">Programme</ref></note>
      </titlePage>
      <div rend="title" xml:lang="fr" xml:id="index">
        <div>
          <head>Comment la TEI utilise ODD</head>
        </div>       
      </div>
    </front>
    <body>
      <!--
         TEI ODD under the bonnet 
         The TEI Guidelines are written in the ODD format  
         The source code for TEI P5 (available from ) contains : 
            39 TEI-XML files, 25 of which correspond to a published chapter, most of them
              defining a module, for example PH-PrimarySources.xml
            778 TEI-XML files, each defining an element, a class, or a macro; more
              specifically: 
                29 datatype macros (data.xxxx) for example
                    data.sex.xml
                116 model classes (model.xxxx) for example
                    model.biblLike.xml
                71 attribute classes (att.xxxx) for example
                    att.divLike.xml
                8 general purpose macros (macro.xxxx) for example
                    macro.phraseSeq.xml
                555 element specifications from ab.xml jusqu'à
                    zone.xml
              
          
          
         
         In this talk, we'll look at each these a bit more closely...  
      -->
      <div xml:lang="fr" rend="slide">
        <head>TEI ODD sous le capot</head>
        <p>La TEI s'exprime en langage ODD. Ce fut d’ailleurs la raison principale de l’invention du
          langage. </p>
        <p>La source TEI P5 (disponible ici <ptr target="http://www.tei-c.org/release/xml/tei/odd/Source/"/>) rassemble : <list>
            <item>39 fichiers en TEI-XML, dont 25 contiennent un chapitre de documentation en
              TEI-XML, la plupart définissant un module, par ex
              <ident>PH-PrimarySources.xml</ident></item>
            <item>778 fichiers en TEI-XML, chacun définissant un élément, une classe, ou une macro <list>
                <item>29 datatypes (<code>data.xxxx</code>) par ex.
                  <ident>data.sex.xml</ident></item>
                <item>116 classes de type modèle (code&gt;model.xxxx) par ex.
                    <ident>model.biblLike.xml</ident></item>
                <item>71 classes de type attribut (<code>att.xxxx</code>) par ex.
                    <ident>att.divLike.xml</ident></item>
                <item>8 macros (macro.xxxx) par ex. <ident>macro.phraseSeq.xml</ident></item>
                <item>555 spécifications d’éléments de <ident>ab.xml</ident> jusqu'à
                    <ident>zone.xml</ident></item>
              </list></item>
          </list>
        </p>
        <p rend="box"> Nous allons regarder cela de plus près…</p>
      </div>
      <!--
         Physical organisation 
         Physical organization (as files) should not be confused with logical organization (as
          specifications etc) 
         
          The file guidelines-XX.xml is the driver file
            for the version of the Guidelines in language XX.
          It contains some preliminaries (a TEI Header, a title page, etc.), followed by
            several lines like this :
            <include
              xmlns="http://www.w3.org/2001/XInclude" href="Guidelines/en/HD-Header.xml"/> 
             , one for each chapter
          Within each chapter file there are similar xInclude statements for the
            objects declared by that chapter 
         
      -->
      <div xml:lang="fr" rend="slide">
        <head>Organisation physique des Guidelines</head>
        <p>Il ne faut pas confondre l’organisation physique (en fichiers) avec l’organisation
          logique (en spécifications etc.)</p>
        <list>
          <item>Le fichier <ident>guidelines-XX.xml</ident> est <soCalled>la</soCalled> la source
            des Guidelines pour la langue XX.</item>
          <item>Mis à part quelques liminaires (un TEI Header, la page de titre, etc.), il contient
            plusieurs lignes comme ceci :
            <egXML xmlns="http://www.tei-c.org/ns/Examples" rend="tiny">&lt;include
              xmlns="http://www.w3.org/2001/XInclude" href="Guidelines/en/HD-Header.xml"/&gt; </egXML>
          </item>
          <item>Au sein de chaque chapitre, on trouve des <code>xInclude</code> similaires pour les
            objets définis par ce chapitre.</item>
        </list>
      </div>
      <!--
         Logical organization 
         
          At the end of each chapter that defines a module, there is a moduleSpec
            element which other specifications can reference
          Specifications may also grouped together for convenience into specGrp
            elements, which can then be referenced as required by specGrpRef elements 
          Each specGrp contains the actual object specifications, again using
            xInclude
          Each object specification, whether included in a specGrp or not, indicates
            the module to which it belongs 
         
      -->
      <div xml:lang="fr" rend="slide">
        <head>Organisation logique des Guidelines</head>
        <list>
          <item>À la fin de chaque chapitre définissant un module, il y a (par convention) un
            élément <gi>moduleSpec</gi> qui rassemble toutes les spécifications référencées par le
            chapitre pour définir un module</item>
          <item>Ces spécifications sont organisées (par commodité) en <gi>specGrp</gi>, qui sont
            ensuite référencées par un <gi>specGrpRef</gi>
          </item>
          <item>Chaque <gi>specGrp</gi> regroupe des spécifications d’objet, indiqué par un
            xInclude</item>
        </list>
      </div>
      <!--
         For example ... 
         This piece of generated text in the English Guidelines : 
         
           
         is produced from this ODD code :
          
            
              Module for Tables, Formulæ, Notated Music, and Graphics
              The module described in this chapter provides the following features: 
                  Tables, Formulæ, Notated Music, Figures
                  Tables, formulæ, notated music, and figures
                  Tableaux, formules et graphiques
                  表格、方程式與圖表
                  
                 The selection and combination of modules to form a TEI schema is
                described in . 
                
                
                
              
            
         
      -->
      <div xml:lang="fr" rend="slide">
        <head>Par exemple…</head>
        <!--      <desc xml:lang="zh-TW">表格、方程式與圖表</desc>
     cannot be included unless you  have chinese font -->
        <p>Cette partie de texte des Guidelines :</p>
        <p>
          <graphic url="ft-1.png"/></p>
        <p> est généré à partir de ces lignes de code ODD :
          <egXML xmlns="http://www.tei-c.org/ns/Examples" rend="teeny">
            <div>
              <head>Module for Tables, Formulæ, Notated Music, and Graphics</head>
              <p>The module described in this chapter provides the following features: <moduleSpec xml:id="DFTFF" ident="figures">
                  <altIdent type="FPI">Tables, Formulæ, Notated Music, Figures</altIdent>
                  <desc>Tables, formulæ, notated music, and figures</desc>
                  <desc xml:lang="fr" rend="slide">Tableaux, formules et graphiques</desc>
                  <!-- ... -->
                </moduleSpec> The selection and combination of modules to form a TEI schema is
                described in <ptr target="#STIN"/>. <specGrpRef target="#DFTTAB"/>
                <specGrpRef target="#DFTFOR"/>
                <specGrpRef target="#DFTNTM"/>
                <specGrpRef target="#DFTGRA"/>
              </p>
            </div></egXML>
        </p>
      </div>
      <!--
         The pointers lead to things like this  
          <specGrp xml:id="DFTTAB"
          n="Tables"> <include xmlns="http://www.w3.org/2001/XInclude"
          href="../../Specs/table.xml"/> <include xmlns="http://www.w3.org/2001/XInclude"
          href="../../Specs/row.xml"/> <include xmlns="http://www.w3.org/2001/XInclude"
          href="../../Specs/cell.xml"/> </specGrp> 
          and the xInclude brings in an actual specification, for example: 
         
          
            cellule
            contains one cell of a table.
            
            
              
            
          
         
      -->
      <div xml:lang="fr" rend="slide">
        <head>Les pointers (#DFTTAB etc.) indiquent des <term>specGrp</term>, comme ceci …</head>
        <egXML xmlns="http://www.tei-c.org/ns/Examples" rend="tiny"> &lt;specGrp xml:id="DFTTAB"
          n="Tables"&gt; &lt;include xmlns="http://www.w3.org/2001/XInclude"
          href="../../Specs/table.xml"/&gt; &lt;include xmlns="http://www.w3.org/2001/XInclude"
          href="../../Specs/row.xml"/&gt; &lt;include xmlns="http://www.w3.org/2001/XInclude"
          href="../../Specs/cell.xml"/&gt; &lt;/specGrp&gt;</egXML>
        <p>et le xInclude apporte la specification elle meme d’un <term>objet</term>, par ex :</p>
        <egXML xmlns="http://www.tei-c.org/ns/Examples" rend="tiny">
          <elementSpec module="figures" ident="cell">
            <gloss versionDate="2007-06-12" xml:lang="fr" rend="slide">cellule</gloss>
            <desc versionDate="2005-01-14" xml:lang="en">contains one cell of à table.</desc>
            <!-- ... -->
          </elementSpec>
        </egXML>
      </div>
      <!--
         What sort of objects are specified? 
         
          datatypes
          model classes
          attribute classes
          macros
          ...and elements
         
         We'll take a closer look at an example of each... 
      -->
      <div xml:lang="fr" rend="slide">
        <head>De quels types d’objet s’agit-il ?</head>
        <list>
          <item>types de données (datatypes)</item>
          <item>classes de modèle (model classes)</item>
          <item>classes d’attribut (attribute classes)</item>
          <item>macros</item>
          <item>… et éléments</item>
        </list>
        <p rend="box">Nous allons détailler un exemplaire de chacun de ces objets …</p>
      </div>
      <!--
         An ODD specification 
         Open teidata.pointer.xml with oXygen 
         Like any other TEI specification file ... 
            It's an XML document which can be validated against the schema file
              specified
            It has two open source licences
            It has a description (desc), repeated in several languages, each
              identified by xml:lang and a versionDate
            It has an identifier, supplied by the ident attribute
            It belongs to the module named by the module attribute 
            It has some additional commentary tagged remarks, also in different
              languages
            
           
      -->
      <div xml:lang="fr" rend="slide">
        <head>Une spécification ODD</head>
        <p rend="box">Ouvrez <ident>teidata.pointer.xml</ident> avec oXygen</p>
        <p>Comme tout autre spécification TEI…<list>
            <item>C’est un document XML, à valider contre le schéma spécifié </item>
            <item>Avec deux licences open source</item>
            <item>Il y a une description (<gi>desc</gi>) répétée en plusieurs langues, chacune
              identifiée par <att>xml:lang</att> et avec une <att>versionDate</att></item>
            <item>La spécification est dotée d’un identifiant, fourni par l’attribut
                <att>ident</att>), et appartient à un module (<att>module</att>)</item>
            <item>Les remarques (<gi>remarks</gi>) sont plurilingues de la même manière que les
                <gi>desc</gi></item>
            <!--<item>Il y a des liens vers des parties des Guidelines où cet objet est présenté,
              regroupés dans un élément <gi>listRef</gi></item>-->
          </list></p>
      </div>
      <!--
         A simple datatype specification 
         The meaning of a datatype is indicated by its content child element. This may
          contain 
            a dataRef element, which can take three forms: 
                the name attribute provides the name of an XSD base datatype (as in
                  this case)
                the key attribute supplies the identifier of some other
                    dataSpec element
                the ref attribute points to a datatype defined by some other
                  system
              
            or a valList element which provides a list of valItem elements,
              each defining a possible value.
           
      -->
      <div xml:lang="fr" rend="slide">
        <head>Spécification d’un datatype</head>
        <!-- a traduire -->
      </div>
      <!--
         Other forms of datatype specification 
         Open teidata.certainty.xml with oXygen 
         
          This has a content which contains a closed list of values 
          any attribute using this datatype can only take the values indicated
         
         Open teidata.probcert.xml with oXygen 
         
          This has a content which offers a choice of two dataRef
            elements
          any attribute using this datatype can take either one of the values defined for
              teidata.certainty or whatever the content of
              teidata.probability offers (a real number between 0 and 1)
         
      -->
      <div xml:lang="fr" rend="slide">
        <head>D'autre formes de spécification d’un datatype</head>
        <!-- a traduire -->
      </div>
      <!--
         A model class specification 
         Open model.biblLike.xml with oXygen 
         
          A model class specification exists only in order to be pointed at by other
            specifications, so not much to see here. 
          As well as the items we saw before, notice that there is a listRef at the
            end, providing cross references to other parts of the Guidelines where this class is
            discussed 
          The classes element is used (both here and elsewhere) to show classes to
            which this class belongs. Each memberOf element references a class of which
            this one is a specialisation. 
          To see more clearly the hierarchy of classes, look at the way this class is
            presented in the documentation: 
         
      -->
      <div xml:lang="fr" rend="slide">
        <head>Spécification d’une classe modèle</head>
        <p rend="box">Ouvrez <ident>model.biblLike.xml</ident> avec oXygen</p>
        <list>
          <item>La spécification d’une classe modèle n’existe que pour être pointée par d’autres
            spécifications, donc pas grand chose à voir ici</item>
          <item>Comme ailleurs, on se sert d’un élément <gi>listRef</gi> pour regrouper des
            pointeurs sur la partie des Guidelines où cette classe est décrite. </item>
          <item>Notez l’élément <gi>classes</gi> : cette classe est réferencée par ("member of")
            d’autres classes modèles (model.inter, etc.). Une référence à la classe model.inter
            implique donc une référence à cette classe.</item>
          <item>Pour voir l’effet de cette hiérarchie de classes, regardez la visualisation de cette
            spécification <ptr target="http://www.tei-c.org/release/doc/tei-p5-doc/en/html/ref-model.biblLike.html"/></item>
        </list>
      </div>
      <!--
         An attribute class specification 
         Open att.divLike.xml with oXygen  
         
          To see the structure of this spec more clearly, open the Outline view (Window ->
            Show View-> Outline) if necessary) 
          The list of attributes inherited by members of this class is supplied by an
              attList, containing two attDef elements (org et
              uniform)
          
          The possible values for an attribute are specified by its datatype
          
          Where they can be enumerated, attribute values are documented by a valList,
            either open or closed, supplying a description for each possible value
          This class is a member of two others (att.metrical, and
              att.fragmentable) : an element which is a member of this class will
            therefore also inherit the attributes defined by those two classes, if they are
            available
         
          explain that att.metrical is only fully defined if you have verse module?  
      -->
      <div xml:lang="fr" rend="slide">
        <head>Spécification d’une classe d’attribut</head>
        <p rend="box">Ouvrez <ident>att.divLike.xml</ident> avec oXygen </p>
        <list>
          <item>On vous recommande d’ouvrir la vue Sommaire (Fenêtre-&gt;Afficher la vue-&gt;Sommaire) si
            besoin est pour visualiser la structure</item>
          <item>La liste des attributs fournis par cette classe est specifiée dans un
              <gi>attList</gi>, qui contient deux <gi>attDef</gi> (<att>org</att> et
              <att>uniform</att>)</item>
          <!--<item>Comme ailleurs, chaque <gi>attDef</gi> s’identifie avec <att>ident</att> et se
            décrit par plusieures <gi>desc</gi>, complétés par des <gi>gloss</gi> dans le cas où
            l’identifiant n’est pas un mot complet</item>-->
          <item>les valeurs disponibles pour un attribut sont spécifiés par un <gi>datatype</gi> et
            éventuellement un <gi>valList</gi>, qui rassemblent chaque valeur prévue avec sa
            définition</item>
          <item>Cette classe est un sous-classe de deux autres (<ident>att.metrical</ident>, et
              <ident>att.fragmentable</ident>) : si ces classes sont disponibles, les attributs
            qu'elles fournissent seront donc également disponibles.</item>
        </list>
      </div>
      <!--
         An element specification 
         Open abstract.xml with oXygen 
         This spec was created comparatively recently (2012-12-27) and so its desc has
          yet to be translated. Check that you recognise and understand its main components: 
         
          The elementSpec has attributes module and ident
            identifying its module and its canonical name
          The classes element specifies to which classes it belongs
          The content element specifies its possible content 
          The exemplum element contains a usage example
          Additional comments (remarks) and cross references
            (listRef)
         
      -->
      <div xml:lang="fr" rend="slide">
        <head>Spécification d’un élément</head>
        <p rend="box">Ouvrez <ident>abstract.xml</ident> avec oXygen</p>
        <list>
          <item>C’est un élément assez récent (révisé le 2012-12-27) donc il n’y aucune traduction
            de sa <gi>desc</gi> etc. Les parties essentielles d’un <gi>elementSpec</gi> sont donc
            plus évidents.</item>
          <item>Les attributs <att>module</att> et <att>ident</att></item>
          <item>l’élément <gi>classes</gi> qui précise les classes auxquelles cet élément
            appartient</item>
          <item>l’élément <gi>content</gi> qui précise le modèle de contenu de cet élément</item>
          <item>l’élément <gi>exemplum</gi> qui contient un exemple de l’usage de l’élément </item>
          <item>facultativement : des remarques (<gi>remarks</gi> et des renvois
            (<gi>listRef</gi>)</item>
        </list>
      </div>
      <!--
          TEI classes 
         You need to understand the TEI class system to understand how ODDs work... 
         
          An attribute class, named something like att.global, provides
            attributes
          A model class, named something like model.profileDescPart, identifies
            a set of elements which have similar semantics, or which can appear in the same
            contexts: : 
              model.xxxLike : the class of elements LIKE an xxx
              model.xxxPart : the class of elements that can be PART OF an xxx
            
          
          one class can inherit properties from another
          model classes are particularly useful because they provide a means of indirectly
            specifying content models
         
      -->
      <div xml:lang="fr" rend="slide">
        <head>Les classes TEI</head>
        <p rend="att">Si on ne comprend pas le système de classes TEI, on aura du mal à comprendre
          le fonctionnement d’un ODD </p>
        <list>
          <item>une classe d’attribut comme <ident>att.global</ident> fournit des attributs</item>
          <item>une classe de modélisation comme <ident>model.profileDescPart</ident> regroupe des
            éléments selon leur sémantique, ou leur possibilités de positionnement : <list>
              <item>model.xxxLike : resemble à un xxx</item>
              <item>model.xxxPart : constitue un xxx</item>
            </list>
          </item>
          <item>toute classe peut hériter ses propriétés d’une autre</item>
          <item>on se sert des classes de modélisation surtout dans les définitions de contenu, ce
            qui permet de les gérer avec une couche d’indirection</item>
        </list>
      </div>
      <!--
         For example 
         
          
            
            
            
          
         
         This tells us that...  
         
          abstract is a member of the model.profileDescPart
            class
          and can therefore appear inside profileDesc, the content of which is
            defined as
            
              
            
          
           as a member of att.responsibility, abstract inherits
            attributes cert and resp
          because att.responsibility is itself a subclass of the class
              att.source, the attribute source is also available. 
         
      -->
      <div xml:lang="fr" rend="slide">
        <head>Par exemple</head>
        <egXML xmlns="http://www.tei-c.org/ns/Examples" rend="tiny">
          <classes>
            <memberOf key="att.global"/>
            <memberOf key="att.responsibility"/>
            <memberOf key="model.profileDescPart"/>
          </classes>
        </egXML>
        <list>
          <item><gi>abstract</gi> est membre de <ident>model.profileDescPart</ident></item>
          <item>le contenu de <gi>profileDesc</gi> est
            <egXML xmlns="http://www.tei-c.org/ns/Examples">
              <zeroOrMore xmlns="http://RELAX NG.org/ns/structure/1.0">
                <ref name="model.profileDescPart"/>
              </zeroOrMore></egXML>
          </item>
          <item> en tant que membre de <ident>att.responsibility</ident>, il hérite des attributs
              <att>cert</att> et <att>resp</att></item>
          <item><ident>att.responsibility</ident> lui transmet également l’attribut
              <att>source</att>, parce qu'elle est <soCalled>memberOf</soCalled> de la classe
              <ident>att.source</ident></item>
        </list>
      </div>
      <!--
         Defining a content model 
         
          Older versions of TEI P5 used the language RELAX NG to define content models (and
            before P5, the TEI used SGML DTD language)
          ODD now provides ways of defining content models without recourse to another
            language
         
         We will discuss this in more detail tomorrow! 
      -->
      <div xml:lang="fr" rend="slide">
        <head>Définition du contenu d’un élément</head>
        <!-- a traduire -->
      </div>
      <!--
         For example...  
         
          
            
              
              
            
          
         
         One or more elements from either the model.pLike class or the
              model.listLike class 
      -->
      <div xml:lang="fr" rend="slide">
        <head>Par exemple ...</head>
        <egXML xmlns="http://www.tei-c.org/ns/Examples">
          <content><alternate maxOccurs="unbounded"><classRef key="model.pLike"/><classRef key="model.listLike"/></alternate></content>
        </egXML>
        <p><q>Un ou plusieurs elements membres des classes <ident>model.pLike</ident> ou bien
              <ident>model.listLike</ident></q></p>
      </div>
      <!--<div xml:lang="en">
        <head>What is a class reference?</head>
        <p>When a <gi>classRef</gi> appears inside <gi>content</gi>, its meaning is determined by
          the value of the <att>expand</att> attribute </p>
        <p>If the class being referenced has 3 members x, y, z...</p>
        <table>
          <row role="label">
            <cell>value of <att>expand</att></cell>
            <cell>meaning</cell>
          </row>
          <row>
            <cell>alternate (default)</cell>
            <cell>(x | y | z)</cell>
          </row>
          <row>
            <cell>sequence</cell>
            <cell>(x, y, z)</cell>
          </row>
          <row>
            <cell>sequenceOptional</cell>
            <cell>(x?, y?, z?)</cell>
          </row>
          <row>
            <cell>sequenceOptionalRepeatable</cell>
            <cell>(x*, y*, z*)</cell>
          </row>
          <row>
            <cell>sequenceRepeatable</cell>
            <cell>(x+, y+, z+)</cell>
          </row>
        </table>
        <p>The attributes <att>minOccurs</att> and <att>maxOccurs</att> are also available; they
          control occurrence of the whole thing</p>
        <p>You can also suppress or select some of the the members of a class, using attributes
            <att>include</att> and <att>except</att>. </p>
      </div>
      <div xml:lang="fr" rend="slide">
        <head>Que signifie la référence à une classe (de modele)?</head>
        <p>La signification d’un <gi>classRef</gi> au sein de <gi>content</gi> varie selon la valeur
          de son attribut <att>expand</att>. </p>
        <p>Considérons le cas d’une classe ayant trois membres x, y, z...</p>
        <table>
          <row role="label">
            <cell>valeur <att>expand</att></cell>
            <cell>signification</cell>
          </row>
          <row>
            <cell>alternate (defaut)</cell>
            <cell>(x | y | z)</cell>
          </row>
          <row>
            <cell>sequence</cell>
            <cell>(x, y, z)</cell>
          </row>
          <row>
            <cell>sequenceOptional</cell>
            <cell>(x?, y?, z?)</cell>
          </row>
          <row>
            <cell>sequenceOptionalRepeatable</cell>
            <cell>(x*, y*, z*)</cell>
          </row>
          <row>
            <cell>sequenceRepeatable</cell>
            <cell>(x+, y+, z+)</cell>
          </row>
        </table>
        <p>Les attributs <att>minOccurs</att> et <att>maxOccurs</att> sont disponibles, comme
          ailleurs</p>
        <p>Les attributs <att>include</att> et <att>except</att> permettant la sélection ou la
          suppression de certain membres de la classe également </p>
      </div>-->
      <!--
         Examples 
         One example is worth a million words... but it's not so easy to embed an XML example in
          an XML document, especially if you want to validate it at the same time. There are several
          possible methods: 
            you could represent the pointy brackets by entity references (&lt; etc) : but
              the result is hard to read and cannot be validated
            you could wrap everything in a special XML construct called a CDATA marked section
                <![CDATA[<p>like this </p> ]]> : the code is easier to
              read but still cannot be validated
            or (as the TEI does) you place everything in a special element in a different
              namespace <egXML xmlns="http://www.tei-c.org/ns/Examples">
                <p>that works !</p>
          
         
      -->
      <div xml:lang="fr" rend="slide">
        <head>Exemples</head>
        <p>Un exemple vaut un million de mots... mais ce n’est pas évident de savoir comment
          intégrer un exemple XML dans un document XML : surtout si on souhaite le valider en même
          temps. Comme déjà noté, plusieurs démarches sont possibles : <list>
            <item>on représente les chevrons par des entités (&amp;lt; etc) : mais la source devient
              illisible et pas validable</item>
            <item>on englobe tout dans un CDATA marked section <code>&lt;![CDATA[&lt;p&gt;comme
                ça&lt;/p&gt; ]]&gt;</code> : la source est plus lisible mais pas validable</item>
            <item>on englobe tout dans un élément d’un autre namespace <code rend="tiny">&lt;egXML
                xmlns="http://www.tei-c.org/ns/Examples"&gt; &lt;p&gt;ça marche !&lt;/p&gt;</code>
            </item>
          </list></p>
        <p>La TEI a adopté la derniere solution... Les expressions du namespace <code>http://www.tei-c.org/ns/Examples</code> sont validées
          par un schéma spécial, qui permet tout élément TEI comme racine, en utilisant le
          validateur onvdl.</p>
      </div>
      
      <!--
         Schematron constraints 
         
          An element specification may also include one or more constraintSpec
            elements, which contain additional constraints of any kind, expressed in the ISO
            Schematron language
          In TEI we use these to express additional semantic or co-occurrence constraints not
            otherwise expressible by any schema language
          Processing these rules requires an additional step during validation
          The current version of oXygen does this automatically, provided your schema is in
            RELAXNG and you are using ISO Schematron.
         
      -->
      <div>
        <head xml:lang="fr" rend="slide">Contraintes schematron</head>
        <list>
          <item>Une spécification d’élément peut aussi contenir un élément <gi>constraintSpec</gi>
            (ou plusieurs), rassemblant des règles exprimées en ISO schématron</item>
          <item>La TEI s’en sert pour exprimer des contraintes additionnelles non exprimables
            autrement, par ex des contraintes contextuelles ou concurrentielles</item>
          <item>Le traitement de ces règles nécessite une étape additionnelle dans la validation des
            documents</item>
          <item>La version courante d’oXygen effectue cela automatiquement, pourvu que votre schema
            s'exprime en RELAXNG et vos contraintes s’expriment en ISO schematron.</item>
        </list>
      </div>
      <!--
         Schematron example 
         Open span.xml with oXygen 
         
          this spec has several constraintSpec elements, each of which has an
              ident and a scheme
          one or more constraint elements can be supplied
          each constraint is expressed in the namespace appropriate to the scheme
            indicated (here ISO schematron)
          For example. if @to is supplied on <name/>, @from must be supplied as
              well (NB "<name/>" is the name of the element which triggered this
            rule)
         
         You'll see more examples of this later... 
      -->
      <div xml:lang="fr" rend="slide">
        <head>Exemple de schématron</head>
        <p rend="box">Ouvrez <ident>span.xml</ident> avec oXygen</p>
        <list>
          <item>cette spécification comporte plusieurs <gi>constraintSpec</gi>, chacun avec son
            @ident et son @scheme</item>
          <item>un ou plusieurs <gi>constraint</gi> sont possibles</item>
          <item>la contrainte s’exprime en langue ISO schématron, donc dans une autre espace de
            noms</item>
          <item>par ex. <code>if @to is supplied on &lt;name/&gt;, @from must be supplied as
              well</code> (NB "&lt;name/&gt;" signifie le nom de l’élément qui activera cette
            règle)</item>
        </list>
        <p>Nous reviendrons sur ce sujet plus loin…</p>
      </div>
      <!--
         A macro specification 
         Open macro.phraseSeq.xml with oXygen 
         
          A macro is a way of providing a short name for some frequently used object, in this
            case a content model.
          The expansion of a macro is provided by the content element 
         
         
            
              
              
              
              
            
           
         Nothing at all, some text, or any number of elements from any of the three classes
              model.gLike, model.phrase or
            mode.global 
      -->
      <div xml:lang="fr" rend="slide">
        <head>Spécification d’une macro</head>
        <p rend="box">Ouvrez <ident>macro.phraseSeq.xml</ident> avec oXygen</p>
        <list>
          <item>Une macro, comme un datatype, fournit une abréviation conventionnelle pour des
            objets souvent utilisés ; dans ce cas, un modèle de contenu.</item>
          <item>L'expansion d'une macro est fourni par un element <gi>content</gi>.
          </item>
        </list>
        <egXML xmlns="http://www.tei-c.org/ns/Examples"><content>
          <alternate minOccurs="0" maxOccurs="unbounded">
            <textNode/>
            <classRef key="model.gLike"/>
            <classRef key="model.phrase"/>
            <classRef key="model.global"/>
          </alternate>
        </content></egXML>
        <p><q>Rien de tout, du texte, ou n'importe combien d'elements membres de n'importe laquelle des trois classes 
          <ident>model.gLike</ident>, <ident>model.phrase</ident> ou
          <ident>mode.global</ident></q></p>
      </div>
     </body>
    </text></TEI>