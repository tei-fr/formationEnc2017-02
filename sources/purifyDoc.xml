<?xml version="1.0" encoding="UTF-8"?>
<TEI xmlns="http://www.tei-c.org/ns/1.0">
   <teiHeader>
      <fileDesc>
         <titleStmt>
            <title xml:lang="fr">Comment mettre à jour vos ODDs</title>
            <title xml:lang="en">How to Update your ODD</title>
            <author>Lou Burnard</author>
         </titleStmt>
         <publicationStmt>
            <p>Working paper for review by the TEI Council</p>
         </publicationStmt>
         <sourceDesc>
            <p>Born digital</p>
         </sourceDesc>
      </fileDesc>
      <revisionDesc>
         <change when="2017-02-25">Add french translation by Emmanuel Château</change>
         <change when="2016-12-11">Correct typos; add dataFacet</change>
         <change when="2016-10-06">Circulate draft to council</change>
         <change when="2016-10-01">Started draft on way home from Vienna</change>
      </revisionDesc>
   </teiHeader>
   <text>
      <body>
         <div>
            <head xml:lang="en">What is this for?</head>
            <head xml:lang="fr">À quoi ce guide est-il destiné ?</head>
            <p xml:lang="en">This little guide is intended to simplify and clarify the task of maintaining or updating an existing TEI customization (an ODD), in particular an ODD which was written before release 3.0 of TEI P5. That release introduced several new features intended to remove the system's reliance on other schema languages. These changes are colloquially known as<soCalled>purification</soCalled> because their motivation was to ensure that all aspects of a TEI specification should be encoded using TEI and nothing else (<note place="end">see further <ref target="https://jtei.revues.org/842"><title>Resolving the Durand Conundrum</title></ref></note>); they affect only the way that the content model of an element or the datatype of an attribute are defined, but for completeness we have included reminders about some other customization features that you may wish to review.</p>
            <p/>
            <p xml:lang="fr">Ce court guide est destiné à simplifier et clarifier la tâche de maintenir ou de mettre à jour une personnalisation TEI existante (un ODD), en particulier un ODD qui a été écrit avant la version 3.0.0 de la TEI P5. Cette livraison de la TEI introduit plusieurs nouvelles fonctionnalités destinées à libérer le système de sa dépendance à d’autres langages de schéma. Ces changements sont connus sous le nom familier de <soCalled>purification</soCalled> parce qu’ils sont motivés par le fait de s’assurer que tous les aspects d’une spécification TEI puissent être encodés en utilisant la TEI et rien d’autre (<note place="end">cf. <ref target="https://jtei.revues.org/842"><title>Resolving the Durand Conundrum</title></ref></note>) ; Ils affectent seulement la manière dont le modèle de contenu d’un élément ou le type de données d’un attribut sont définis, mais pour plus de complétude nous avons inclus plusieurs rappels au sujets de certaines fonctionnalités de personnalisations que vous pourriez avoir envie de revoir.</p>
         </div>
         <div>
            <head xml:lang="en">It ain't broke: why fix it?</head>
            <head xml:lang="fr">Pourquoi le réparer puisque ce n’était pas brisé ?</head>
            <p xml:lang="en">Since release 2.0 it has been possible to tie any ODD file to a particular release of the Guidelines. If you know approximately the date of the release of TEI P5 against which your ODD was first compiled, you can use the <att>source</att> attribute on the <gi>schemaSpec</gi> element it contains to ensure that the schema generated from it continues to use the TEI definitions contained in that particular source. This has the obvious advantage that you don't have to do any work to maintain it, but some equally obvious disadvantages: <list>
               <item>You can't use any of the new features, corrections, or other improvements introduced in TEI P5 <emph>after</emph> the date your ODD was created</item>
                  <item>Your TEI use risks becoming increasingly divergent from the mainstream, so that interchange with others will become increasingly difficult</item>
               </list>
            </p>
            <p xml:lang="fr">Depuis la version 2.0, il est possible de lier un fichier ODD à une version particulière des Guidelines. En connaissant approximativement la date de la livraison de la TEI P5 d’après laquelle votre ODD avait d’abord été compilé, vous pouvez utiliser l’attribut <att>source</att> sur l’élément <gi>schemaSpec</gi> pour vous assurer que le schéma généré à partir de lui continue d’employer les définitions contenues <!--contenues--> dans cette source particulière. Ce mécanisme a l’avantage évident que vous n’avez rien d’autre à faire pour le maintenir, mais aussi quelques désavantages tout aussi évidents :<list>
               <item>Vous ne pouvez pas utiliser toutes les nouvelles fonctionnalités, corrections ou autres améliorations introduites dans la TEI P5 <emph>après</emph> la date à laquelle votre ODD fut créé</item>
               <item>Votre utilisation de la TEI risque de devenir de plus en plus divergent des pratiques générales, de sorte que l’interopérabilité avec les autres devienne de plus en plus difficile</item>
            </list>
            </p>
            <p xml:lang="en">Nothing in digital form is ever really finished. It's more than likely that the requirements of your project will have changed a little since your ODD was first designed. It's almost inevitable that as your project evolves, you'll have come across things you'd do differently if you could start all over again. Reviewing your ODD is a very good way of thinking about doing that. </p>
            <p xml:lang="fr">Rien n’est jamais vraiment terminé sous une forme numérique. Il y a donc des chances que les besoins de votre projet soient sujets à changer depuis la première conception de votre ODD. Il est généralement inévitable que votre projet évolue, et vous allez devoir passer à travers des choses que vous referiez différemment si vous deviez recommencer. Réviser votre ODD est une bonne manière de pouvoir penser à la manière d’envisager cela.</p>
         </div>
         <div>
            <head xml:lang="en">Good things to review</head>
            <head xml:lang="fr">Bonnes choses à revoir</head>
            <p xml:lang="en">Here's a little checklist of things you might want to review in the light of experience: <list>
                  <item>Which elements are you actually using? Beginners often think that it's better to allow almost any kind of content in their schema: an extreme case of this misapprehension leads people to use TEI All for everything. It may well be that your project started out a bit uncertain about the kind of data it would have to be able to handle. But now you've encoded umpteen gazillion pages of Whatever, you surely know a bit better the kind of things that crop up. And every element you allow for in your schema is another element you need to explain to your encoders, document, find examples for, and check that it is being used consistently (if it is used at all). It's also another element that the poor benighted software developer you finally got funding for has to be prepared to handle in that swish new interface you've been promising yourself forever.</item>
                  <item>Reducing the number of elements permitted by your schema makes it easier for you to concentrate on the quality of your documentation, for example by introducing examples more appropriate to your project than those provided by vanilla TEI (which somehow manage to be both general and very specialised).</item>
                  <item>The same considerations apply to attributes, and in particular their range of values. At the outset you may not have been sure what values to permit for the <att>foo</att> attribute on your <gi>bar</gi> elements, so you allowed anything. Now you have discovered that some of your encoders gave this attribute the value <val>centre</val>, others used <val>center</val>, and yet others used <val>middle</val>, all meaning (probably) the same thing. Now that you know what values you want, add a <gi>valList</gi> to your ODD to insist on them, and do some data cleanup.</item>
                  <item>Has the circus moved on? You may have spent a lot of time and effort defining new elements or attributes not available in the TEI at the time, only to find that the TEI (independently or as a result of your good work) has subsequently decided to implement exactly what you did, or something like it. Maybe you can remove your old modifications and be pure TEI again. Even if the TEI decided to do things differently from you, it might be worth looking at the TEI version of your smart idea to see if it can be adapted to your needs! </item>
               </list>
            </p>
            <p xml:lang="fr">Voici une feuille de route de choses que vous pourriez vouloir revoir à la lumière de votre expérience : <list>
               <item>Quels éléments utilisez vous réellement ? Les débutants peuvent souvent penser qu’il est préférable de permettre toute sorte de contenus dans leur schéma : un cas extrême de cette mauvaise appréhension conduit à utiliser le schéma TEI All pour tout faire. Il se peut même que votre projet ait débuté avec quelques incertitudes sur le genre de données que vous auriez besoin de prendre en charge. Mais maintenant que vous avez enco<!--r-->dé des tonnes de pages ou de texte, vous savez sûrement mieux le genre de chose qu’il faut raboter. Chaque nouvel élément que vous adjouter à votre schéma est un autre élément dont vous devez expliquer l’utilisation à vos encodeurs, que vous devez documenter, pour lequel vous devez fournir des exemples, et vous assurer qu’il est employé avec consistance (s’il est bien employé même). C’est aussi un élément supplémentaire dont devra s’occuper le pauvre développeur que vous êtes parvenu à financer dans cette merveilleuse nouvelle interface que vous vous êtes promis depuis toujours.</item>
               <item>Réduire le nombre d’éléments permis dans votre schéma vous permet de vous concentrer plus facilement sur la qualité de votre documentation, par exemple en introduisant des exemples plus appropriés à votre projet que ceux fournis de manière standard par la TEI (qui, ce faisant, parviennent à être à la fois généraux et très spécialisés).</item>
               <item>Les mêmes considérations s’appliquent aux attributs, et en particulier leur liste de valeurs. Dans un premier temps, vous n’étiez pas certain des val<!--uer-->eurs que vous vouliez permettre pour les attributs <att>truc</att> sur vos éléments <gi>machin</gi>, alors vous avez tout permis. Maintenant<!-- que--> vous découvrez que certains de vos encodeurs ont donné la valeur <val>center</val> à<!--ç--> cet attribut tandis que d’autres lui ont donné la valeur <val>centre</val>, et d’autres encore ont utilisé la valeur <val>middle</val>, toutes voulant (probablement) désigner la même chose. Maintenant que vous savez quelles valeurs vous voulez renseigner, ajoutez un <gi>valList</gi> à votre ODD pour insister sur ces valeurs, et par la même occasion faire un peu de nettoyage dans vos données.</item>
               <item>Au fur et à mesure que vous avez avancé, <!-- ? --> vous avez probablement passé beaucoup de temps et d’effort à définir de nouveaux éléments ou des attributs qui n’étaient pas disponibles dans la TEI à l’époque où vous travailliez, pour découvrir depuis que la TEI (indépendamment de vous ou bien comme résultat de votre bon travail) a depuis décidé d’implémenter exactement ce que vous avez fait, ou quelque chose de proche. Vous pouvez peut-être retirer vos vieilles modifications pour redevenir purement TEI. Même si la TEI avait décidé de faire les choses de manière différente, cela vaudrait sans doute la peine de prêter attention à cette version proposée par la TEI de votre chouette idée pour voir si elle peut être adaptée à vos besoins !</item>
            </list>
            </p>
            <p>Et oui, il est fort probable que <!--la conséquence de--> suite à cette revue de vos fichiers, vous puissiez avoir besoin de modifier vos données en même temps que votre schéma. Mais ce n’est qu’une petite question de programmation XSLT…</p>
         </div>
         <div>
            <head>Content Model Revision</head>
            <p>In days of yore, (i.e. releases P1 to P3 inclusive) TEI Content Models were expressed in the SGML language. The first XML release TEI P4, and all releases of P5 prior to 3.0 used the ISO standard RELAX NG language for this purpose. But from the start, a design goal of the TEI was to define an encoding scheme independent of any implementation metalanguage. The TEI has always used its own <soCalled>ODD</soCalled> language to define components which are then processed to produce documentation in a variety of formats (HTML, PDF, ePub etc.) and schemas in a number of different languages (RELAX NG, W3C Schema, and XML DTD). At release 3.0 this principle was extended to the definition of content models, which previously had been expressed using the RELAX NG language, but which are now expressed using some special purpose TEI elements (<note place="end">The authoritative source of information on these is of course chapter 22 of the Guidelines <ref target="http://www.tei-c.org/release/doc/tei-p5-doc/en/html/TD.html"><title>Documentation Elements</title></ref>. In any disagreement between what is stated there and what is suggested here, the former is correct.</note>) </p>
            <p>If your customization changed the content model of any element, it will have done so using expressions in RELAX NG, typically using a <gi>rng:ref</gi> element to provide the name of a pattern. For example, suppose your customization defined a new element with a content model of <code>macro.phraseSeq</code>. In the <gi>elementSpec</gi> defining your new element, there will be a <gi>content</gi> element containing something like <code>&lt;rng:ref name="macro.phraseSeq"/></code>. To keep in step with the current TEI P5 release, you need
               to change this RELAX NG content to its equivalent in the ODD language which is
                  <code>&lt;macroRef key="macro.phraseSeq"/></code>. </p>
            <p>In the ODD language, references to different kinds of object (elements, classes, macros, etc.)
               in a content model are represented by different element types, specifically
               <gi>elementRef</gi>, <gi>classRef</gi>, <gi>macroRef</gi>. Hence, a RELAX NG content model in
               the form <code>&lt;rng:ref name="x"></code> will become <code>&lt;elementRef key="x"/></code>
               if <ident>x</ident> names an element, <code>&lt;classRef key="x"/></code> if it names a class,
               and <code>&lt;macroRef key="x"/></code> if it names a macro. </p>
            <p>Content models can of course be much more complicated. If your RELAX NG model uses an
               alternation or a sequence of components, you will need to use one of the ODD elements
                  <gi>alternate</gi> and <gi>sequence</gi> to wrap them rather than the RELAX NG
               (semi)equivalents <gi>rng:choice</gi> and <gi>rng:group</gi> respectively. For example, this
               RELAX NG model says that a <gi>foo</gi> can contain either a <gi>bar</gi> or a <gi>baz</gi>:
               <egXML xmlns:rng="http://relaxng.org/ns/structure/1.0" xmlns="http://www.tei-c.org/ns/Examples"><rng:choice>
                     <rng:ref name="bar"/><rng:ref name="baz"/></rng:choice></egXML>
                Its equivalent in pure ODD would be
               <egXML xmlns="http://www.tei-c.org/ns/Examples"><alternate>
                     <elementRef key="bar"/><elementRef key="baz"/></alternate></egXML>
            </p>
            <p>If some components of your content model are optional or repeatable, you will have used the
               RELAX NG elements <gi>rng:oneOrMore</gi> or <gi>rng:zeroOrMore</gi>. In ODD optionality and
               repeatability are expressed using attributes <att>minOccurs</att> and <att>maxOccurs</att>,
               which can be supplied for any of the elements discussed so far. For example, a RELAX NG content
               model such as
               <egXML xmlns:rng="http://relaxng.org/ns/structure/1.0" xmlns="http://www.tei-c.org/ns/Examples"><rng:oneOrMore><rng:choice>
                        <rng:ref name="bar"/><rng:ref name="baz"/></rng:choice></rng:oneOrMore></egXML>
                has the following equivalent in pure ODD
               <egXML xmlns="http://www.tei-c.org/ns/Examples"><alternate minOccurs="1" maxOccurs="unbounded">
                     <elementRef key="bar"/><elementRef key="baz"/></alternate></egXML>
            </p>
            <p>An empty element is indicated in the RELAX NG language by a special pattern called
                  <gi>rng:empty</gi>. In the ODD language, however, we indicate that an element has no content
               by supplying an empty <gi>content</gi> element in its specification. </p>
            <p>The ODD language also provides a few more special-purpose component elements for content
               models: <gi>textNode</gi>, <gi>valList</gi>, and <gi>anyElement</gi>. </p>
            <p>The <gi>textNode</gi> element is provided as a replacement for the built-in RELAX NG pattern
                  <gi>rng:text</gi>. There are no restrictions on where it may be placed in an ODD content
               model, although existing schema languages mostly permit it to appear only in mixed content
               models like the following:
               <egXML xmlns:rng="http://relaxng.org/ns/structure/1.0" xmlns="http://www.tei-c.org/ns/Examples">
                  <alternate minOccurs="0" maxOccurs="unbounded">
                     <textNode/>
                     <elementRef key="foo"/>
                  </alternate></egXML>
            </p>
            <p>The RELAX NG language allows a number of other components within a content model, some of which
               are difficult to convert, but few of which are likely to appear in a pre-existing TEI ODD. If
               your ODD used the RELAX NG element <gi>rng:value</gi> to specify content explicitly, this must
               be expressed in an ODD as a <gi>valItem</gi> within a <gi>valList</gi>. If your ODD used the
               RELAX NG element <gi>rng:element</gi> to specify that any element is permitted at this point in
               a content model, you can do something similar with the ODD <gi>anyElement</gi> element. In
               general, however, the presence of any of the following in your old content model will require
               manual intervention: <gi>rng:anyName</gi>
               <gi>rng:attribute</gi>
               <gi>rng:data</gi>
               <gi>rng:element</gi>
               <gi>rng:except</gi>
               <gi>rng:name</gi>
               <gi>rng:nsName</gi>
               <gi>rng:param</gi>
               <gi>rng:value</gi></p>
            <p>Here are some example <gi>content</gi> elements taken from the content models of existing TEI
               elements: <table>
                  <row role="label">
                     <cell>RELAX NG Specification</cell>
                     <cell>ODD equivalent</cell>
                  </row>
                  <row>
                     <cell>
                        <egXML xmlns="http://www.tei-c.org/ns/Examples"
 xmlns:rng="http://relaxng.org/ns/structure/1.0">
 <content>
    <rng:oneOrMore>
       <rng:ref name="cell"/>
    </rng:oneOrMore>
 </content>
                        </egXML>
                     </cell>
                     <cell>
                        <egXML xmlns="http://www.tei-c.org/ns/Examples">
 <content>
    <elementRef key="cell" minOccurs="1" maxOccurs="unbounded"/>
 </content>
                        </egXML>
                     </cell>
                  </row>
                  <row>
                     <cell>
                        <egXML xmlns="http://www.tei-c.org/ns/Examples"
 xmlns:rng="http://relaxng.org/ns/structure/1.0">
 <content>
    <rng:zeroOrMore>
       <rng:choice>
          <rng:text/>
          <rng:ref name="model.limitedPhrase"/>
          <rng:ref name="model.global"/>
       </rng:choice>
    </rng:zeroOrMore></content>
                        </egXML>
                     </cell>
                     <cell>
                        <egXML xmlns="http://www.tei-c.org/ns/Examples">
 <content>
    <alternate minOccurs="0" maxOccurs="unbounded">
       <textNode/>
       <classRef key="model.limitedPhrase"/>
       <classRef key="model.global"/>
    </alternate>
 </content>
                        </egXML>
                     </cell>
                  </row>
                  <row>
                     <cell>
                        <egXML xmlns="http://www.tei-c.org/ns/Examples"
 xmlns:rng="http://relaxng.org/ns/structure/1.0">
 <content>
    <group xmlns="http://relaxng.org/ns/structure/1.0">
       <zeroOrMore>
          <ref name="analytic"/>
       </zeroOrMore>
       <oneOrMore>
          <ref name="monogr"/>
          <zeroOrMore>
             <ref name="series"/>
          </zeroOrMore>
       </oneOrMore>
       <zeroOrMore>
          <choice>
             <ref name="model.noteLike"/>
             <ref name="model.ptrLike"/>
             <ref name="relatedItem"/>
             <ref name="citedRange"/>
          </choice>
       </zeroOrMore>
    </group>
 </content>
                        </egXML>
                     </cell>
                     <cell>
                        <egXML xmlns="http://www.tei-c.org/ns/Examples">
 <content>
    <sequence>
       <elementRef key="analytic" minOccurs="0" maxOccurs="unbounded"/>
       <sequence minOccurs="1" maxOccurs="unbounded">
          <elementRef key="monogr"/>
          <elementRef key="series" minOccurs="0" maxOccurs="unbounded"/>
       </sequence>
       <alternate minOccurs="0" maxOccurs="unbounded">
          <classRef key="model.noteLike"/>
          <classRef key="model.ptrLike"/>
          <elementRef key="relatedItem"/>
          <elementRef key="citedRange"/>
       </alternate>
    </sequence>
 </content>
                        </egXML>
                     </cell>
                  </row>
               </table></p>
         </div>
         <div>
            <head>Attribute values and datatypes</head>
            <p>As noted above, you may wish to change your existing ODD to be more precise in the way that
               attribute values are specified. If you decide to introduce a <gi>valList</gi> (semi-closed or
               closed) to constrain the possible values of an attribute you will also need to change its
                  <gi>datatype</gi> to reference <ident>teidata.enumerated</ident>. </p>
            <p>If the <gi>datatype</gi> element appears in your ODD already, you will need to change it to use
               a <gi>dataRef</gi> element pointing to one of the predefined <ident>teidata</ident> datatype
               specifications. A set of predefined data specifications using RELAX NG has been retained for
               compatibility reasons, but these will probably be withdrawn by the end of 2017. </p>
            <p>Proceed as follows: <list>
                  <item>if your existing <gi>datatype</gi> contains something like <code>&lt;rng:ref
                        name="data.xxxx"/></code>, change it to <code>&lt;dataRef
                     key="teidata.xxxx"/></code></item>
                  <item>if your existing <gi>datatype</gi> contains something like <code>&lt;rng:data
                        type="xxxx"/></code>, change it to <code>&lt;dataRef name="xxxx"/></code>
                  </item>
                  <item>if a component of your existing <gi>datatype</gi> contains something like
                        <code>&lt;rng:param name='pattern'/></code> you will need to either <list>
                        <item>add an attribute <att>restriction</att> to the <gi>datatype</gi>, giving as
 value the content of the <gi>rng:param</gi> element</item>
                        <item>or (if the parameter cannot be expressed as a regular expression, and if the
 datatype uses the <att>name</att> attribute) re-express the parameter as a TEI
    <gi>dataFacet</gi></item>
                     </list></item>
                  <item>If the datatype being defined permits multiple values, alternation, or anything else
                     other than a single value, you must define it in a <gi>dataSpec</gi> element, using the
                     same components as an element content model (<gi>alternate</gi>, <att>maxOccurs</att>,
                     etc.) Note that although the <gi>datatype</gi> element permits only a single
                        <gi>dataRef</gi> child, it is itself repeatable, so that you can say (for example)
                        <q>this attribute takes at least three pointer values</q>. </item>
               </list></p>
            <p>Here are some example <gi>content</gi> elements taken from the data specifications used by some
               existing TEI datatypes: <table>
                  <row role="label">
                     <cell>RELAX NG Specification</cell>
                     <cell>ODD equivalent</cell>
                  </row>
                  <row>
                     <cell>
                        <egXML xmlns="http://www.tei-c.org/ns/Examples">
 <content>
    <data xmlns="http://relaxng.org/ns/structure/1.0" type="NCName"/>
 </content>
                        </egXML>
                     </cell>
                     <cell>
                        <egXML xmlns="http://www.tei-c.org/ns/Examples">
 <content>
    <dataRef name="NCName"/>
 </content>
                        </egXML>
                     </cell>
                  </row>
                  <row role="data">
                     <cell>
                        <egXML xmlns="http://www.tei-c.org/ns/Examples">
 <content>
    <data xmlns="http://relaxng.org/ns/structure/1.0" type="nonNegativeInteger">
       <param name="maxInclusive">100</param>
    </data>
 </content></egXML>
                     </cell>
                     <cell>
                        <egXML xmlns="http://www.tei-c.org/ns/Examples">
 <content xmlns:rng="http://relaxng.org/ns/structure/1.0">
    <dataRef name="nonNegativeInteger" restriction="[0-9][0-9]?"/>
 </content></egXML>
                     </cell>
                  </row>
                  <row role="data">
                     <cell>
                        <egXML xmlns="http://www.tei-c.org/ns/Examples">
 <content>
 <choice xmlns="http://relaxng.org/ns/structure/1.0">
       <data type="float">
          <param name="minExclusive">0.0</param>
          <param name="maxExclusive">1.0</param>
       </data>
       <value>regular</value>
       <value>irregular</value>
       <value>unknown</value>
    </choice>
 </content></egXML>
                     </cell>
                     <cell>
                        <egXML xmlns="http://www.tei-c.org/ns/Examples">
 <content>
    <alternate>
       <dataRef name="float">
          <dataFacet name="minExclusive" value="0"/>
          <dataFacet name="maxExclusive" value="1"/>
       </dataRef>
       <valList>
          <valItem ident="regular"/>
          <valItem ident="irregular"/>
          <valItem ident="unknown"/>
       </valList>
    </alternate>
 </content></egXML>
                     </cell>
                  </row>
                  <row role="data">
                     <cell>
                        <egXML xmlns="http://www.tei-c.org/ns/Examples">
 <content>
    <choice xmlns:rng="http://relaxng.org/ns/structure/1.0">
       <rng:value>high</rng:value>
       <rng:value>medium</rng:value>
       <rng:value>low</rng:value>
       <rng:value>unknown</rng:value>
    </choice>
 </content></egXML>
                     </cell>
                     <cell>
                        <egXML xmlns="http://www.tei-c.org/ns/Examples">
 <content>
    <valList type="closed">
       <valItem ident="high"/>
       <valItem ident="medium"/>
       <valItem ident="low"/>
       <valItem ident="unknown"/>
    </valList>
 </content></egXML>
                     </cell>
                  </row>
               </table></p>
         </div>
         <div>
            <head>My head hurts: where's the script?</head>
            <p>Yes, there is a script or two you can experiment with if you find this all too daunting. They
               were used to transform the whole of the pre-3.0 TEI Guideline specifications
               semi-automatically. They deal with 99% of the situations you are likely to encounter, but
               they're not guaranteed! You can find them on Github at <ptr
                  target="https://github.com/TEIC/TEI/tree/dev/P5/Scripts"/>: use them in good health, but at
               your own risk.</p>
            <p>Don't hesitate to share your experience, good or bad, on the TEI discussion list, by raising a
               ticket on Github, or by contributing to the TEI wiki. The TEI is a community effort! </p>
         </div>
      </body>
   </text>
</TEI>